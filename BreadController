using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class bread : MonoBehaviour
{
    public GameObject a;//1番
    public GameObject b;//2番
    public GameObject c;//3番
    public GameObject d;//4番
    public GameObject e;//1番&2番
    public GameObject f;//1番&3番
    public GameObject g;//2番&4番
    public GameObject h;//3番&4番
    public GameObject z;//3つ以上のボタンを押す時

    Rigidbody rb;

    public GameObject gameover;//ゲームオーバー判定のオブジェクト

    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    // Update is called once per frame
    void Update()
    {
        //パンがくっつく処理
        if (one.a == true)//1番が触れている時
        {
            if (Input.GetKeyDown(KeyCode.Alpha1))
            {
                if (Input.GetKey(KeyCode.Alpha2) && (Input.GetKey(KeyCode.Alpha4)))//既に2と4が押されていたとき
                {
                    //gを子オブジェクトに戻す
                    this.gameObject.transform.parent = null;
                    g.gameObject.transform.parent = this.gameObject.transform;

                    //zを親オブジェクトにする
                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha3) && (Input.GetKey(KeyCode.Alpha4)))//既に3と4が押されていたとき
                {
                    //hを子オブジェクトに戻す
                    this.gameObject.transform.parent = null;
                    h.gameObject.transform.parent = this.gameObject.transform;

                    //zを親オブジェクトにする
                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha2))//既に2が押されていたとき
                {
                    //bを子オブジェクトに戻す
                    this.gameObject.transform.parent = null;
                    b.gameObject.transform.parent = this.gameObject.transform;

                    //eを親オブジェクトにする
                    e.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = e.gameObject.transform;

                }
                else if (Input.GetKey(KeyCode.Alpha3))//既に3が押されていたとき
                {
                    //cを子オブジェクトに戻す
                    this.gameObject.transform.parent = null;
                    c.gameObject.transform.parent = this.gameObject.transform;

                    //fを親オブジェクトにする
                    f.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = f.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha4))//既に4が押されていたとき
                {
                    //cを子オブジェクトに戻す
                    this.gameObject.transform.parent = null;
                    d.gameObject.transform.parent = this.gameObject.transform;

                    //zを親オブジェクトにする
                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else//何も押されていない時
                {
                    //aを親オブジェクトにする
                    a.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = a.gameObject.transform;
                }
            }
            if (Input.GetKey(KeyCode.Alpha1))
            {
                rb.isKinematic = true;
            }
        }
        if (two.a == true)
        {
            if (Input.GetKeyDown(KeyCode.Alpha2))
            {
                if (Input.GetKey(KeyCode.Alpha1) && (Input.GetKey(KeyCode.Alpha4)))
                {
                    //既にzが親オブジェクトになっているので処理する必要がない
                }
                else if (Input.GetKey(KeyCode.Alpha1))
                {
                    this.gameObject.transform.parent = null;
                    a.gameObject.transform.parent = this.gameObject.transform;

                    e.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = e.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha3))
                {
                    this.gameObject.transform.parent = null;
                    c.gameObject.transform.parent = this.gameObject.transform;

                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha4))
                {
                    this.gameObject.transform.parent = null;
                    d.gameObject.transform.parent = this.gameObject.transform;

                    g.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = g.gameObject.transform;
                }
                else
                {
                    b.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = b.gameObject.transform;
                }
            }
            if (Input.GetKey(KeyCode.Alpha2))
            {
                rb.isKinematic = true;
            }
        }
        if (three.a == true)
        {
            if (Input.GetKeyDown(KeyCode.Alpha3))
            {
                if (Input.GetKey(KeyCode.Alpha1) && Input.GetKey(KeyCode.Alpha4))
                {
                    //既にzが親オブジェクトになっているので処理する必要がない
                }
                else if (Input.GetKey(KeyCode.Alpha1))
                {
                    this.gameObject.transform.parent = null;
                    a.gameObject.transform.parent = this.gameObject.transform;

                    f.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = f.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha2))
                {
                    this.gameObject.transform.parent = null;
                    b.gameObject.transform.parent = this.gameObject.transform;

                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha4))
                {
                    this.gameObject.transform.parent = null;
                    d.gameObject.transform.parent = this.gameObject.transform;

                    h.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = h.gameObject.transform;
                }
                else
                {
                    c.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = c.gameObject.transform;
                }
            }
            if (Input.GetKey(KeyCode.Alpha3))
            {
                    rb.isKinematic = true;
            }
        }
        if (four.a == true)
        {
            if (Input.GetKeyDown(KeyCode.Alpha4))
            {
                if (Input.GetKey(KeyCode.Alpha1) && Input.GetKey(KeyCode.Alpha2))
                {
                    this.gameObject.transform.parent = null;
                    e.gameObject.transform.parent = this.gameObject.transform;

                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha1) && Input.GetKey(KeyCode.Alpha3))
                {
                    this.gameObject.transform.parent = null;
                    f.gameObject.transform.parent = this.gameObject.transform;

                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha1))
                {
                    this.gameObject.transform.parent = null;
                    a.gameObject.transform.parent = this.gameObject.transform;

                    z.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = z.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha2))
                {
                    this.gameObject.transform.parent = null;
                    b.gameObject.transform.parent = this.gameObject.transform;

                    g.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = g.gameObject.transform;
                }
                else if (Input.GetKey(KeyCode.Alpha3))
                {
                    this.gameObject.transform.parent = null;
                    c.gameObject.transform.parent = this.gameObject.transform;

                    h.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = h.gameObject.transform;
                }
                else
                {
                    d.gameObject.transform.parent = null;
                    this.gameObject.transform.parent = d.gameObject.transform;
                }
            }
            if (Input.GetKey(KeyCode.Alpha4))
            {
                rb.isKinematic = true;
            }
        }

        //パンが離れる処理
        if (Input.GetKeyUp(KeyCode.Alpha1))
        {
            if(Input.GetKey(KeyCode.Alpha2)&& Input.GetKey(KeyCode.Alpha4))//既に2と4が押されていたとき
            {
                //zを子オブジェクトに戻す
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                //gを親オブジェクトにする
                g.gameObject.transform.parent = null;
                this.gameObject.transform.parent = g.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3) && Input.GetKey(KeyCode.Alpha4))//既に3と4が押されていたとき
            {
                //zを子オブジェクトに戻す
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                //hを親オブジェクトにする
                h.gameObject.transform.parent = null;
                this.gameObject.transform.parent = h.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3) && Input.GetKey(KeyCode.Alpha2))//既に2と3が押されていたとき
            {
                //e,f,zを子オブジェクトに戻す
                this.gameObject.transform.parent = null;
                e.gameObject.transform.parent = this.gameObject.transform;
                f.gameObject.transform.parent = this.gameObject.transform;
                z.gameObject.transform.parent = this.gameObject.transform;

                //zを親オブジェクトにする
                z.gameObject.transform.parent = null;
                this.gameObject.transform.parent = z.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha2))//既に2が押されていたとき
            {
                //eを子オブジェクトに戻す
                this.gameObject.transform.parent = null;
                e.gameObject.transform.parent = this.gameObject.transform;

                //bを親オブジェクトにする
                b.gameObject.transform.parent = null;
                this.gameObject.transform.parent = b.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3))//既に3が押されていたとき
            {
                //fを子オブジェクトに戻す
                this.gameObject.transform.parent = null;
                f.gameObject.transform.parent = this.gameObject.transform;

                //cを親オブジェクトにする
                c.gameObject.transform.parent = null;
                this.gameObject.transform.parent = c.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha4))//既に4が押されていたとき
            {
                //zを子オブジェクトに戻す
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                //dを親オブジェクトにする
                d.gameObject.transform.parent = null;
                this.gameObject.transform.parent = d.gameObject.transform;
            }
            else//何も押されていない時
            {
                //aを親オブジェクトにする
                this.gameObject.transform.parent = null;
                a.gameObject.transform.parent = this.gameObject.transform;
            }
        }

        if (Input.GetKeyUp(KeyCode.Alpha2))
        {
            if (Input.GetKey(KeyCode.Alpha1) && Input.GetKey(KeyCode.Alpha4))
            {
                //既にzが親オブジェクトになっているので処理する必要がない
            }
            else if (Input.GetKey(KeyCode.Alpha3) && Input.GetKey(KeyCode.Alpha1))
            {
                this.gameObject.transform.parent = null;
                e.gameObject.transform.parent = this.gameObject.transform;
                f.gameObject.transform.parent = this.gameObject.transform;
                z.gameObject.transform.parent = this.gameObject.transform;


                f.gameObject.transform.parent = null;
                this.gameObject.transform.parent = f.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3) && Input.GetKey(KeyCode.Alpha4))
            {
                this.gameObject.transform.parent = null;
                g.gameObject.transform.parent = this.gameObject.transform;
                h.gameObject.transform.parent = this.gameObject.transform;
                z.gameObject.transform.parent = this.gameObject.transform;


                h.gameObject.transform.parent = null;
                this.gameObject.transform.parent = h.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha1))
            {
                this.gameObject.transform.parent = null;
                e.gameObject.transform.parent = this.gameObject.transform;


                a.gameObject.transform.parent = null;
                this.gameObject.transform.parent = a.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3))
            {
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;


                c.gameObject.transform.parent = null;
                this.gameObject.transform.parent = c.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha4))
            {
                this.gameObject.transform.parent = null;
                g.gameObject.transform.parent = this.gameObject.transform;


                d.gameObject.transform.parent = null;
                this.gameObject.transform.parent = d.gameObject.transform;
            }
            else
            {
                this.gameObject.transform.parent = null;
                b.gameObject.transform.parent = this.gameObject.transform;
            }
        }

        if (Input.GetKeyUp(KeyCode.Alpha3))
        {
            if(Input.GetKey(KeyCode.Alpha1)&& Input.GetKey(KeyCode.Alpha4))
            {
                //既にzが親オブジェクトになっているので処理する必要がない
            }
            else if (Input.GetKey(KeyCode.Alpha1) && Input.GetKey(KeyCode.Alpha2))
            {
                this.gameObject.transform.parent = null;
                e.gameObject.transform.parent = this.gameObject.transform;
                f.gameObject.transform.parent = this.gameObject.transform;
                z.gameObject.transform.parent = this.gameObject.transform;


                e.gameObject.transform.parent = null;
                this.gameObject.transform.parent = e.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha2) && Input.GetKey(KeyCode.Alpha4))
            {
                this.gameObject.transform.parent = null;
                g.gameObject.transform.parent = this.gameObject.transform;
                h.gameObject.transform.parent = this.gameObject.transform;
                z.gameObject.transform.parent = this.gameObject.transform;

                g.gameObject.transform.parent = null;
                this.gameObject.transform.parent = g.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha1))
            {
                this.gameObject.transform.parent = null;
                f.gameObject.transform.parent = this.gameObject.transform;


                a.gameObject.transform.parent = null;
                this.gameObject.transform.parent = a.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha2))
            {
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                b.gameObject.transform.parent = null;
                this.gameObject.transform.parent = b.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha4))
            {
                this.gameObject.transform.parent = null;
                h.gameObject.transform.parent = this.gameObject.transform;

                d.gameObject.transform.parent = null;
                this.gameObject.transform.parent = d.gameObject.transform;
            }
            else
            {
                this.gameObject.transform.parent = null;
                c.gameObject.transform.parent = this.gameObject.transform;
            }
        }

        if (Input.GetKeyUp(KeyCode.Alpha4))
        {
            if(Input.GetKey(KeyCode.Alpha1)&& Input.GetKey(KeyCode.Alpha2))
            {
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                e.gameObject.transform.parent = null;
                this.gameObject.transform.parent = e.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha1) && Input.GetKey(KeyCode.Alpha3))
            {
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                f.gameObject.transform.parent = null;
                this.gameObject.transform.parent = f.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3) && Input.GetKey(KeyCode.Alpha2))
            {
                this.gameObject.transform.parent = null;
                g.gameObject.transform.parent = this.gameObject.transform;
                h.gameObject.transform.parent = this.gameObject.transform;
                z.gameObject.transform.parent = this.gameObject.transform;

                z.gameObject.transform.parent = null;
                this.gameObject.transform.parent = z.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha1))
            {
                this.gameObject.transform.parent = null;
                z.gameObject.transform.parent = this.gameObject.transform;

                a.gameObject.transform.parent = null;
                this.gameObject.transform.parent = a.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha2))
            {
                this.gameObject.transform.parent = null;
                g.gameObject.transform.parent = this.gameObject.transform;

                b.gameObject.transform.parent = null;
                this.gameObject.transform.parent = b.gameObject.transform;
            }
            else if (Input.GetKey(KeyCode.Alpha3))
            {
                this.gameObject.transform.parent = null;
                h.gameObject.transform.parent = this.gameObject.transform;

                c.gameObject.transform.parent = null;
                this.gameObject.transform.parent = c.gameObject.transform;
            }
            else
            { 
                this.gameObject.transform.parent = null;
                d.gameObject.transform.parent = this.gameObject.transform;
            }
        }

        if(Input.GetKeyUp(KeyCode.Alpha1))
        {
            if(!Input.GetKey(KeyCode.Alpha2)||!Input.GetKey(KeyCode.Alpha3)||!Input.GetKey(KeyCode.Alpha4))
            {
                rb.isKinematic = false;
            }
        }

        if (Input.GetKeyUp(KeyCode.Alpha2))
        {
            if (!Input.GetKey(KeyCode.Alpha1) || !Input.GetKey(KeyCode.Alpha3) || !Input.GetKey(KeyCode.Alpha4))
            {
                rb.isKinematic = false;
            }
        }

        if (Input.GetKeyUp(KeyCode.Alpha3))
        {
            if (!Input.GetKey(KeyCode.Alpha2) || !Input.GetKey(KeyCode.Alpha1) || !Input.GetKey(KeyCode.Alpha4))
            {
                rb.isKinematic = false;
            }
        }

        if (Input.GetKeyUp(KeyCode.Alpha4))
        {
            if (!Input.GetKey(KeyCode.Alpha2) || !Input.GetKey(KeyCode.Alpha3) || !Input.GetKey(KeyCode.Alpha1))
            {
                rb.isKinematic = false;
            }
        }

        if (Input.GetMouseButtonDown(0))//パンを左クリックで動かすとき親子関係を初期化
        {
            a.gameObject.transform.parent = this.gameObject.transform;
            b.gameObject.transform.parent = this.gameObject.transform;
            c.gameObject.transform.parent = this.gameObject.transform;
            d.gameObject.transform.parent = this.gameObject.transform;
            e.gameObject.transform.parent = this.gameObject.transform;
            f.gameObject.transform.parent = this.gameObject.transform;
            g.gameObject.transform.parent = this.gameObject.transform;
            h.gameObject.transform.parent = this.gameObject.transform;
            z.gameObject.transform.parent = this.gameObject.transform;
        }
    }

    private void OnCollisionEnter(Collision collision)
    {
        //床に触れたときダメージが演出がでる
        if (collision.gameObject.tag == "floor")
        {
            zinwari.a = false;
            zinwari_deru.isFadeOut = true;
            GameGauge.a = true;
            GameGauge_number.a = true;

        }
        else//床から離れると徐々に回復する
        {
            GameGauge.a = false;
            GameGauge_number.a = false;

            zinwari_deru.isFadeOut = false;
            zinwari_deru.alfa = 0;
            zinwari.a = true;
        }

        //壁や床をすり抜けると強制ゲームオーバー
        if (collision.gameObject.tag == "gameover")
        {
            gameover.SetActive(true);
            rb.isKinematic = true;
        }
    }
}
